#!r6rs
(library (test rime protobuf private vec-test)
  (export main)
  (import (rnrs (6))
          (rime loop)
          (rime protobuf private vec)
          (rime unit-test)
          (rime logging))
  (define test-vector #t)
  (define v (vec 1 2 3))
  (define-test
    test-vec-create-vector
    (CHECK equal? (vec-length v) 3)
    (vec-set! v 0 0)
    (vec-set! v 1 1)
    (vec-set! v 2 2)
    (CHECK vec-equal? v (vec 0 1 2))
    (CHECK equal? (vec-ref v 0) 0)
    (CHECK equal? (vec-ref v 1) 1)
    (CHECK equal? (vec-ref v 2) 2)
    (CHECK equal? (vec->list v) (list 0 1 2))
    (vec-fill! v 0)
    (CHECK equal? (vec->list v) (list 0 0 0))
    (vec-for-each (lambda (x) (logger :info "x=" x)) v)
    (CHECK vec-equal? (vec-map + (vec 0 1 2) (vec 3 4 5))
           (vec 3 5 7))
    (set! v (vec 0 1 2))
    (vec-append v 3 4 5)
    (CHECK vec-equal? v
           (vec 0 1 2 3 4 5))
    )
  (define (main)
    (run-all-tests)))
